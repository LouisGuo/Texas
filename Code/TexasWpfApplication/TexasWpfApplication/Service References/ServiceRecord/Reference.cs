//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TexasWpfApplication.ServiceRecord {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRecord.RecordSoap")]
    public interface RecordSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool NewRecord(int playerNum, int startChips, float firstInterest, float secondInterest, float thirdInterest, float fourthInterest, float fifthInterest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinishRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool FinishRecord();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecordsByPage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRecordsByPage(int page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRecordsNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int getRecordsNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecordForLive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRecordForLive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecordByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRecordByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteRecord(int recordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RestartRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RestartRecord(int RecordID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RecordSoapChannel : TexasWpfApplication.ServiceRecord.RecordSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordSoapClient : System.ServiceModel.ClientBase<TexasWpfApplication.ServiceRecord.RecordSoap>, TexasWpfApplication.ServiceRecord.RecordSoap {
        
        public RecordSoapClient() {
        }
        
        public RecordSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public bool NewRecord(int playerNum, int startChips, float firstInterest, float secondInterest, float thirdInterest, float fourthInterest, float fifthInterest) {
            return base.Channel.NewRecord(playerNum, startChips, firstInterest, secondInterest, thirdInterest, fourthInterest, fifthInterest);
        }
        
        public bool FinishRecord() {
            return base.Channel.FinishRecord();
        }
        
        public System.Data.DataSet GetRecords() {
            return base.Channel.GetRecords();
        }
        
        public System.Data.DataSet GetRecordsByPage(int page) {
            return base.Channel.GetRecordsByPage(page);
        }
        
        public int getRecordsNumber() {
            return base.Channel.getRecordsNumber();
        }
        
        public System.Data.DataSet GetRecordForLive() {
            return base.Channel.GetRecordForLive();
        }
        
        public System.Data.DataSet GetRecordByID(int ID) {
            return base.Channel.GetRecordByID(ID);
        }
        
        public bool DeleteRecord(int recordID) {
            return base.Channel.DeleteRecord(recordID);
        }
        
        public bool RestartRecord(int RecordID) {
            return base.Channel.RestartRecord(RecordID);
        }
    }
}
